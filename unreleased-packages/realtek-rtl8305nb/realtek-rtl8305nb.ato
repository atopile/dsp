"Realtek RTL8305NB Ethernet switch (skeleton)"
#pragma experiment("FOR_LOOP")
#pragma experiment("BRIDGE_CONNECT")

import ElectricPower
import Ethernet
import Capacitor
import I2C
import ElectricLogic
import ElectricSignal
import Resistor

from "parts/Realtek_Semicon_RTL8305NB_VB_CG/Realtek_Semicon_RTL8305NB_VB_CG.ato" import Realtek_Semicon_RTL8305NB_VB_CG_package
from "parts/Yangxing_Tech_X322525MRB4SI/Yangxing_Tech_X322525MRB4SI.ato" import Yangxing_Tech_X322525MRB4SI_package

module Realtek_RTL8305NB:
    """
    Realtek RTL8305NB 5-port 10/100 Ethernet switch

    Features:
    - 5 x 10/100 Ethernet ports with auto-negotiation
    - Internal 1.2V regulator (3.3V input)
    - MDIO management interface
    - Per-port LED status indicators
    - Loop detection and EEE support (EEE disabled by default)

    Optional EEPROM Support:
    If custom configuration is needed, connect an M24C02 (or compatible)
    I2C EEPROM to the i2c_mdio interface at address 0x50. The RTL8305NB
    will auto-load configuration from EEPROM during power-on.
    """

    # --- Package ---
    package = new Realtek_Semicon_RTL8305NB_VB_CG_package

    # --- External interfaces ---
    power_3v3 = new ElectricPower
    """
    Power supply (3.3V)
    """
    power_3v3.required = True
    assert power_3v3.voltage within 3.3V +/- 5%

    ethernets = new Ethernet[5]
    """
    Ethernet interfaces
    """

    i2c_mdio = new I2C
    """
    I2C/MDIO management interface (dual function pins)
    """
    i2c_mdio.required = True

    reset = new ElectricLogic
    """
    System reset input (active low)
    """
    reset.required = True

    crystal = new Yangxing_Tech_X322525MRB4SI_package
    """
    25MHz crystal oscillator (Yangxing Tech X322525MRB4SI)
    Specifications: 25MHz, 18pF load capacitance, ±10ppm, -40°C to +85°C
    """

    loop_indication = new ElectricLogic
    """
    Loop indication for LED and buzzer (dual function with DIS_LD strapping)
    """

    # --- Configuration/Strapping options ---
    # These pins have dual functions: LED output OR configuration input
    # Default configuration assumes LED outputs (pull-ups for proper logic levels)

    # P0LED/DIS_EEE strapping pull-down (disables EEE by default, weak enough for LED operation)
    p0_config_pulldown = new Resistor
    p0_config_pulldown.resistance = 100kohm +/- 5%
    p0_config_pulldown.package = "0402"

    # P2LED/DIS_RST_BLNK strapping pull-up (enables reset blink by default)
    p2_config_pullup = new Resistor
    p2_config_pullup.resistance = 10kohm +/- 5%
    p2_config_pullup.package = "0402"

    # LDIND/DIS_LD strapping pull-up (enables loop detection by default)
    ldind_config_pullup = new Resistor
    ldind_config_pullup.resistance = 10kohm +/- 5%
    ldind_config_pullup.package = "0402"

    # --- Internal rails ---
    _power_1v2 = new ElectricPower
    """
    Internal 1.2V rail (generated by on-chip regulator)
    """

    # --- Power connections ---
    # 3.3V inputs and PLL
    package.AVDDH ~ power_3v3.hv
    package.AVDDHPLL ~ power_3v3.hv
    package.DVDDH ~ power_3v3.hv
    package.V33IN ~ power_3v3.hv

    # 1.2V internal regulator output and loads
    _power_1v2.hv ~ package.V12OUT
    package.AVDDL ~ _power_1v2.hv
    package.AVDDLPLL ~ _power_1v2.hv
    package.DVDDL ~ _power_1v2.hv

    # Grounds (EP is thermal pad ground)
    package.EP ~ power_3v3.lv

    # --- Miscellaneous connections ---
    # I2C/MDIO management interface
    i2c_mdio.scl.line ~ package.SCL_MDC
    i2c_mdio.sda.line ~ package.SDA_MDIO
    i2c_mdio.scl.reference ~ power_3v3
    i2c_mdio.sda.reference ~ power_3v3

    # Reset (active low with pull-up)
    reset.line ~ package.RESETB
    reset.reference ~ power_3v3

    # External pull-up resistor for reset (redundant with internal, but good practice)
    reset_pullup = new Resistor
    reset_pullup.resistance = 10kohm +/- 5%
    reset_pullup.package = "0402"
    reset.line ~> reset_pullup ~> power_3v3.hv

    # 25MHz crystal with load capacitors
    crystal.OSC1 ~ package.XI
    crystal.OSC2 ~ package.XO
    crystal.GND ~ power_3v3.lv

    # Crystal load capacitors (18pF each for 18pF crystal)
    crystal_caps = new Capacitor[2]
    for cap in crystal_caps:
        cap.capacitance = 18pF +/- 10%
        cap.package = "0402"

    crystal.OSC1 ~> crystal_caps[0] ~> power_3v3.lv
    crystal.OSC2 ~> crystal_caps[1] ~> power_3v3.lv

    # Loop indication
    loop_indication.line ~ package.LDIND_DIS_LD
    loop_indication.reference ~ power_3v3

    # --- Configuration strapping resistors ---
    # These set default configurations during power-on/reset
    package.P0LED_DIS_EEE ~> p0_config_pulldown ~> power_3v3.lv    # EEE disabled (better compatibility)
    package.P2LED_DIS_RST_BLNK ~> p2_config_pullup ~> power_3v3.hv # Reset blink enabled
    package.LDIND_DIS_LD ~> ldind_config_pullup ~> power_3v3.hv    # Loop detection enabled

    # IBREF resistor (2.49kΩ ±1% to GND)
    ibref_resistor = new Resistor
    ibref_resistor.resistance = 2.49kohm +/- 1%
    ibref_resistor.package = "0402"
    package.IBREF ~> ibref_resistor ~> power_3v3.lv

    # --- Decoupling for 1.2V rail ---
    decoupling_1v2 = new Capacitor[6]
    for cap in decoupling_1v2:
        cap.capacitance = 100nF +/- 20%
        cap.package = "0402"
        _power_1v2.hv ~> cap ~> power_3v3.lv

    # --- Decoupling for 3.3V rail ---
    decoupling_3v3 = new Capacitor[6]
    for cap in decoupling_3v3:
        cap.capacitance = 100nF +/- 20%
        cap.package = "0402"
        power_3v3.hv ~> cap ~> power_3v3.lv

    # --- Ethernet connections ---
    # Port 0: RXIP0/RXIN0 (pins 44,45), TXOP0/TXON0 (pins 47,46), P0LED (pin 29)
    ethernets[0].pairs[0].p.line ~ package.RXIP0
    ethernets[0].pairs[0].n.line ~ package.RXIN0
    ethernets[0].pairs[1].p.line ~ package.TXOP0
    ethernets[0].pairs[1].n.line ~ package.TXON0
    ethernets[0].led_link.line ~ package.P0LED_DIS_EEE

    # Port 1: RXIP1/RXIN1 (pins 2,3), TXOP1/TXON1 (pins 5,4), P1LED (pin 30)
    ethernets[1].pairs[0].p.line ~ package.RXIP1
    ethernets[1].pairs[0].n.line ~ package.RXIN1
    ethernets[1].pairs[1].p.line ~ package.TXOP1
    ethernets[1].pairs[1].n.line ~ package.TXON1
    ethernets[1].led_link.line ~ package.P1LED

    # Port 2: RXIP2/RXIN2 (pins 12,11), TXOP2/TXON2 (pins 9,10), P2LED (pin 32)
    ethernets[2].pairs[0].p.line ~ package.RXIP2
    ethernets[2].pairs[0].n.line ~ package.RXIN2
    ethernets[2].pairs[1].p.line ~ package.TXOP2
    ethernets[2].pairs[1].n.line ~ package.TXON2
    ethernets[2].led_link.line ~ package.P2LED_DIS_RST_BLNK

    # Port 3: RXIP3/RXIN3 (pins 14,15), TXOP3/TXON3 (pins 17,16), P3LED (pin 33)
    ethernets[3].pairs[0].p.line ~ package.RXIP3
    ethernets[3].pairs[0].n.line ~ package.RXIN3
    ethernets[3].pairs[1].p.line ~ package.TXOP3
    ethernets[3].pairs[1].n.line ~ package.TXON3
    ethernets[3].led_link.line ~ package.P3LED

    # Port 4: RXIP4/RXIN4 (pins 22,21), TXOP4/TXON4 (pins 19,20), P4LED (pin 34)
    ethernets[4].pairs[0].p.line ~ package.RXIP4
    ethernets[4].pairs[0].n.line ~ package.RXIN4
    ethernets[4].pairs[1].p.line ~ package.TXOP4
    ethernets[4].pairs[1].n.line ~ package.TXON4
    ethernets[4].led_link.line ~ package.P4LED

    # Set power reference for all ethernet interfaces
    for eth in ethernets:
        eth.led_speed.reference ~ power_3v3
        eth.led_link.reference ~ power_3v3
        eth.pairs[0].p.reference ~ power_3v3
        eth.pairs[0].n.reference ~ power_3v3
        eth.pairs[1].p.reference ~ power_3v3
        eth.pairs[1].n.reference ~ power_3v3
        eth.pairs[2].p.reference ~ power_3v3
        eth.pairs[2].n.reference ~ power_3v3
        eth.pairs[3].p.reference ~ power_3v3
        eth.pairs[3].n.reference ~ power_3v3
