#pragma experiment("BRIDGE_CONNECT")
#pragma experiment("FOR_LOOP")
#pragma experiment("TRAITS")

import ElectricPower
import ElectricLogic
import Resistor
import I2C
import I2S
import can_bridge_by_name

# Packages (unreleased) TODO: release these
from "unreleased-packages/realtek-rtl8305nb/realtek-rtl8305nb.ato" import Realtek_RTL8305NB
from "unreleased-packages/rpi-cm5/cm5.ato" import CM5 # without rj45
from "unreleased-packages/xlr-connectors/xlr-connectors.ato" import XLR_Male_PC_Mount
from "unreleased-packages/xlr-connectors/xlr-connectors.ato" import XLR_Female_PC_Mount
from "unreleased-packages/ti-tpsm863257/ti-tpsm863257.ato" import TPSM863257


# Packages
from "atopile/usb-connectors/usb-connectors.ato" import USB2_0TypeCHorizontalConnector
from "atopile/adi-adau145x/adau145x.ato" import Analog_Devices_ADAU145x_driver
from "atopile/ti-tlv75901/ti-tlv75901.ato" import TLV75901_driver
from "atopile/adi-ad1938/ad1938.ato" import Analog_Devices_AD1938_driver
from "atopile/rj45-connectors/rj45-connectors.ato" import RJ45_Horizontal_TH_Magnetics_8Port

# Parts
from "parts/MW_IRM_30_5/MW_IRM_30_5.ato" import MW_IRM_30_5
from "parts/MW_IRM_30_5/MW_IRM_30_5.ato" import ElectricPowerAC
from "parts/DIBO_DB2ERC_5_08_2P_BK/DIBO_DB2ERC_5_08_2P_BK.ato" import DIBO_DB2ERC_5_08_2P_BK_package
from "parts/CJT_A2541WV_2x5P/CJT_A2541WV_2x5P.ato" import CJT_A2541WV_2x5P_package    
from "parts/YLPTEC_B0524S_2WR3/YLPTEC_B0524S_2WR3.ato" import YLPTEC_B0524S_2WR3
from "parts/Texas_Instruments_TPS7A4700RGWT/Texas_Instruments_TPS7A4700RGWT.ato" import Texas_Instruments_TPS7A4700RGWT_18V


module App:

    # --- Power supply ---
    power_5v = new ElectricPower
    power_3v3_digital = new ElectricPower
    power_3v3_analog = new ElectricPower
    power_18v_pos = new ElectricPower
    power_18v_neg = new ElectricPower
    connetor_ac = new DIBO_DB2ERC_5_08_2P_BK_package

    regulator_ac_5v = new MW_IRM_30_5
    regulator_3v3_analog = new TLV75901_driver
    regulator_3v3_digital = new TPSM863257
    regulator_24v_isolated_pos = new YLPTEC_B0524S_2WR3
    regulator_24v_isolated_neg = new YLPTEC_B0524S_2WR3
    regulator_18v_neg = new Texas_Instruments_TPS7A4700RGWT_18V
    regulator_18v_pos = new Texas_Instruments_TPS7A4700RGWT_18V

    power_ac = new ElectricPowerAC
    power_ac.line ~ connetor_ac.1
    power_ac.neutral ~ connetor_ac.2

    power_ac ~> regulator_ac_5v ~> power_5v
    power_5v ~> regulator_3v3_analog ~> power_3v3_analog
    power_5v ~> regulator_3v3_digital ~> power_3v3_digital

    regulator_3v3_digital.output_voltage = 3.3V +/- 3%
    regulator_3v3_analog.output_voltage = 3.3V +/- 4%

    # Audio power supplies +/-18v with center referenced to gnd
    power_5v ~> regulator_24v_isolated_pos ~> regulator_18v_pos ~> power_18v_pos
    power_5v ~> regulator_24v_isolated_neg ~> regulator_18v_neg ~> power_18v_neg

    iso_resistor = new Resistor
    iso_resistor.resistance = 10ohm +/- 1%
    iso_resistor.package = "0402"

    power_5v.gnd ~> iso_resistor ~> power_18v_pos.gnd
    power_5v.gnd ~> iso_resistor ~> power_18v_neg.vcc


    # --- Compute module ---
    cm5 = new CM5
    power_5v ~ cm5.power_5v

    # TODO: cm5 I2S interface
    cm5_i2s_resistor_jumpers = new Resistor[6]

    for resistor in cm5_i2s_resistor_jumpers:
        resistor.resistance = 0ohm
        resistor.package = "0402"

    cm5_i2s_master = new I2S
    cm5_i2s_master.sck.line ~> cm5_i2s_resistor_jumpers[0] ~> cm5.cm5.gpio[18].line
    cm5_i2s_master.ws.line ~> cm5_i2s_resistor_jumpers[1] ~> cm5.cm5.gpio[19].line
    cm5_i2s_master.sd.line ~> cm5_i2s_resistor_jumpers[2] ~> cm5.cm5.gpio[21].line

    cm5_i2s_slave = new I2S
    # cm5_i2s_slave.sck.line ~> cm5_i2s_resistor_jumpers[3] ~> cm5.cm5.gpio[18].line
    # cm5_i2s_slave.ws.line ~> cm5_i2s_resistor_jumpers[4] ~> cm5.cm5.gpio[19].line
    # cm5_i2s_slave.sd.line ~> cm5_i2s_resistor_jumpers[5] ~> cm5.cm5.gpio[21].line


    # --- DSP ---
    dsp = new Analog_Devices_ADAU145x_driver
    power_3v3_digital ~ dsp.power
    cm5.i2cs[0] ~ dsp.model.i2c
    cm5.cm5.gpio[0] ~ dsp.reset_disable

    dsp_debug_connector = new CJT_A2541WV_2x5P_package
    dsp_debug_connector.2 ~ dsp.model.i2c.scl.line # SCL
    dsp_debug_connector.4 ~ dsp.model.i2c.sda.line # SDA
    dsp_debug_connector.5 ~ dsp.reset_disable.line # nRESET
    dsp_debug_connector.9 ~ power_3v3_digital.gnd  # GND

    # --- USB connector ---
    usb_connector_horizontal = new USB2_0TypeCHorizontalConnector
    power_5v ~ usb_connector_horizontal.usb.usb_if.buspower
    cm5.usb2 ~ usb_connector_horizontal.usb
    
    # --- Ethernet ---
    ports = new RJ45_Horizontal_TH_Magnetics_8Port
    switches = new Realtek_RTL8305NB[3]

    ## Switch configuration
    for switch in switches:
        switch.power_3v3 ~ power_3v3_digital

    # I2C
    i2c_resistor_jumpers = new I2CResistorJumper[3]
    switches[0].i2c_mdio ~> i2c_resistor_jumpers[0] ~> cm5.i2cs[0]
    switches[1].i2c_mdio ~> i2c_resistor_jumpers[1] ~> cm5.i2cs[1]
    switches[2].i2c_mdio ~> i2c_resistor_jumpers[2] ~> cm5.i2cs[2]

    i2c_pullups = new Resistor[6]
    for i2c_pullup in i2c_pullups:
        i2c_pullup.resistance = 10kohm +/- 1%
        i2c_pullup.package = "0402"

    cm5.i2cs[0].scl.line ~> i2c_pullups[0] ~> cm5.i2cs[0].scl.reference.hv
    cm5.i2cs[0].sda.line ~> i2c_pullups[1] ~> cm5.i2cs[0].sda.reference.hv
    cm5.i2cs[1].scl.line ~> i2c_pullups[2] ~> cm5.i2cs[1].scl.reference.hv
    cm5.i2cs[1].sda.line ~> i2c_pullups[3] ~> cm5.i2cs[1].sda.reference.hv
    cm5.i2cs[2].scl.line ~> i2c_pullups[4] ~> cm5.i2cs[2].scl.reference.hv
    cm5.i2cs[2].sda.line ~> i2c_pullups[5] ~> cm5.i2cs[2].sda.reference.hv

    # Reset
    reset_resistor_jumpers = new LogicResistorJumper[3]
    switches[0].reset ~> reset_resistor_jumpers[0] ~> cm5.cm5.gpio[0]
    switches[1].reset ~> reset_resistor_jumpers[1] ~> cm5.cm5.gpio[1]
    switches[2].reset ~> reset_resistor_jumpers[2] ~> cm5.cm5.gpio[2]

    # Ports
    ports.ethernet[0] ~ switches[0].ethernets[0]
    ports.ethernet[2] ~ switches[0].ethernets[1]
    ports.ethernet[1] ~ switches[0].ethernets[2]
    ports.ethernet[5] ~ switches[0].ethernets[3]
    ports.ethernet[4] ~ switches[1].ethernets[0] # 4
    ports.ethernet[3] ~ switches[1].ethernets[1]
    ports.ethernet[6] ~ switches[1].ethernets[2] # 6
    ports.ethernet[7] ~ switches[1].ethernets[3]

    # Internal Switch
    switches[2].ethernets[0] ~ cm5.cm5.ethernet
    switches[2].ethernets[1] ~ switches[0].ethernets[4]
    switches[2].ethernets[2] ~ switches[0].ethernets[4]

    # --- XLR Connectors ---
    xlr_audio_input_connectors = new XLR_Female_PC_Mount[2]
    xlr_audio_output_connectors = new XLR_Male_PC_Mount[8]

    # --- DMX Connectors ---
    xlr_dmx_input_connector = new XLR_Male_PC_Mount
    xlr_dmx_output_connector = new XLR_Female_PC_Mount

    # --- AD1938 ---
    ad1938 = new Analog_Devices_AD1938_driver
    power_3v3_analog ~ ad1938.power


    # --- Audio chain ---
    cm5_i2s_master ~ dsp.model.i2s_ins[0]
    cm5_i2s_slave ~ dsp.model.i2s_outs[0]


    # dsp.model.i2s_outs[1] ~ ad1938.model.
    reset_disable = new ElectricLogic
    reset_disable ~ ad1938.reset_disable


module I2CResistorJumper:
    i2c_in = new I2C
    i2c_out = new I2C
    resistors = new Resistor[2]

    i2c_in.scl.line ~> resistors[0] ~> i2c_out.scl.line
    i2c_in.sda.line ~> resistors[1] ~> i2c_out.sda.line

    i2c_in.reference_shim ~ i2c_out.reference_shim

    for resistor in resistors:
        resistor.resistance = 0ohm
        resistor.package = "0402"

    trait can_bridge_by_name<input_name = "i2c_in", output_name = "i2c_out">

module LogicResistorJumper:
    logic_in = new ElectricLogic
    logic_out = new ElectricLogic
    resistor = new Resistor

    logic_in.line ~> resistor ~> logic_out.line
    logic_in.reference ~ logic_out.reference

    resistor.resistance = 0ohm
    resistor.package = "0402"
    
    trait can_bridge_by_name<input_name = "logic_in", output_name = "logic_out">
